#!/usr/bin/env ruby

require 'thor'

class Babou < ::Thor
  class_option :app, :default => "./config/environment.rb"
  class_option :config, :default => "./config/rabbit.yml"
  class_option :mode, :default => "prowl"
  class_option :threadpool_size, :type => :numeric, :default => 8

  desc "start", "Start the babou subscription server"
  long_desc <<-BABOUDESC
Babou is a simple subscriber server to manage event subscriptions in a separate process.
  BABOUDESC

  def start
    require options[:app]
    require 'action_subscriber'

    $0 = "babou server #{object_id}"
    puts "Desperate for something to play with..."

    ::ActionSubscriber::Rabbit::Configuration.load_from_yaml(options[:config])
    ::ActionSubscriber::Threadpool.set_size(options[:threadpool_size])

    case options[:mode]
    when "prowl"
      ::ActionSubscriber::Babou.prowl
    when "pounce"
      ::ActionSubscriber::Babou.pounce
    end
  end
end

[:INT, :QUIT, :TERM].each do |signal|
  trap(signal) do
    ::EventMachine.stop_event_loop
    puts "Down Babou! ... down!"
  end
end

trap(:USR1) { ::ActionSubscriber.print_subscriptions }

::Babou.start(ARGV)
